//Task 1:Function Declaration
function calculateProfit(costPrice, sellingPrice, unitsSold) {
    let profit = (sellingPrice - costPrice) * unitsSold; //Defines the numerical units and identifies the equation used to solve for Total Profit
    return (profit) //Causes the code to run in the console and display the Total Profit generated by running the values through the equation
};
console.log("Total Profit:$", calculateProfit(20, 30, 100)); //Logs the Total profit generated by running the values 20, 30, and 100 through the equation
console.log("Total Profit:$", calculateProfit(50, 70, 200)); //Logs the Total Profit generated by running the values 50, 70, and 200 through the equation

//Task 2: Function Expression
const calculateSalesTax = function(amount, taxRate) {
    let salesTax = amount * taxRate //Creates the formula needed to calculate the Sales Tax on a purchase
    return (salesTax) //Commands the equation to dsiplay the Sales Tax on a purchase
};
console.log("Sales Tax:$", calculateSalesTax(100, 0.07)); //Registers the values for Amount and Tax Rate to be put into the equation to calculate Sales Tax
console.log("Sales Tax:$", calculateSalesTax(500, 0.1)); //Registers the values for Amount and Tax Rate to be put in the equation to calculate the Sales Tax

//Task 3: Arrow Function
const calculateBonus = (salary, performanceRating) => salary * performanceRating; //Establishes the calculateBonus function and identifies the parts that will be used to make up the equation
performanceRating = Excellent = 0.20, Good = 0.10, Average = 0.05 //Establishes the values for the performance ratings so that they can be implimented in the equation
console.log("Bonus:$", calculateBonus(5000, Excellent)); //Logs the bonus one would recieve with a salary of $5000 and a 20% bonus to the console
console.log("Bonus:$", calculateBonus(7000, Good)); //Logs the bonus one would recieve with a salary of 7000 and a 10% bonus to the console

//Task 4: Parameters and Arguments
function calculateSubscriptionCost(plan, month, discount = 0) {
    return (plan * month) - discount
}; //Establishes the function and the equation it will operate to find the Total Cost of a Subscription
plan = Basic = 10, Premium = 20, Enterprise = 30; //Defines the value of each plan in terms of price in order to add it in the calculation
console.log("Total Cost:$", calculateSubscriptionCost(Basic, 6, 10)); //Logs these values to the console and calculates a Total Cost from it ($50)
console.log("Total Cost:$", calculateSubscriptionCost(Premium, 12, 0)); //Logs these values to the console and calculates a Total Cost from it ($240)

//Task 5: Returning Values
function convertCurrency(amount, exchangeRate) {
    return amount * exchangeRate //Sets up equation which will return our converted currency value
}
console.log("Converted Amount:$",convertCurrency(100, 1.1)); //Logged the converted currency value achieved by plugging these values into the equation
console.log("Converted Amount:$", convertCurrency(250, 0.85)); //Logged the converted currecy value achieved by plugging these values into the equation

//Task 6: Higher-Order Functions
let orders = [400, 300, 240, 360, 271]; //This Array establishes the initial Order amounts before the application of discounts
function applyBulkDiscount(orders, discountFunction) {
    return orders.map(discountFunction); //Prepares the function to generate a new Array when the discounts are applied
}
let discount10percent = (orders) => orders * 0.9; //Creates the formula to apply the 10%
let discountedPurchases = applyBulkDiscount(orders, amount => amount > 500 ? discount10percent : amount); //Creates the conditions that must be met in order for the discount to be applied
console.log("The order amounts after the application of the discount rule are:", discountedPurchases); //Logs the new discounted purchases to an array within the console

//Task 7: Closures
function createExpenseTracker(expenses) {
}
return total = 350
console.log(tracker(200))
console.log(tracker(150))